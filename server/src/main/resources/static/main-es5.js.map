{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/loginpage/login-page.component.ts","webpack:///src/app/login/loginpage/login-page.component.html","webpack:///src/app/main/footer/footer.component.ts","webpack:///src/app/main/footer/footer.component.html","webpack:///src/app/main/main-routing.module.ts","webpack:///src/app/main/main.module.ts","webpack:///src/app/main/main/main.component.ts","webpack:///src/app/main/main/main.component.html","webpack:///src/app/main/nav-bar/nav-bar.component.ts","webpack:///src/app/main/nav-bar/nav-bar.component.html","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/token-storage.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","mod","MainModule","LoginModule","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","component","LoginRoutingModule","forChild","LoginPageComponent","authService","tokenStorage","fb","router","validationErrors","login","type","message","password","isLoggedIn","isLoginFailed","errorMessage","rights","initForm","getToken","getRights","form","group","required","subscribe","data","saveToken","token","saveUser","saveRights","reloadPage","err","error","navigate","onSubmit","FooterComponent","children","MainRoutingModule","MainComponent","NavBarComponent","AUTH_API","httpOptions","headers","AuthService","http","credentials","param","append","post","providedIn","TOKEN_KEY","USER_KEY","RIGHTS_KEY","TokenStorageService","window","sessionStorage","clear","removeItem","setItem","getItem","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./main/main.module').then(mod => mod.MainModule)\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./login/login.module').then(mod => mod.LoginModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginModule } from './login/login.module';\r\nimport { MainModule } from './main/main.module';\r\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    LoginModule,\r\n    MainModule,\r\n    HttpClientModule,\r\n    NgbModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {LoginPageComponent} from \"./loginpage/login-page.component\";\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '', component: LoginPageComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginPageComponent } from './loginpage/login-page.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthService } from '../shared/services/auth.service';\r\nimport { HttpClient, HttpHandler } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginPageComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class LoginModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../../shared/services/auth.service\";\r\nimport {TokenStorageService} from \"../../shared/services/token-storage.service\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-loginpage',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  validationErrors = {\r\n    login: [\r\n      { type: 'required', message: 'Введите логин'}\r\n    ],\r\n    password: [\r\n      { type: 'required', message: 'Введите пароль'}\r\n    ]\r\n  };\r\n  form: FormGroup;\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  rights: string ='';\r\n\r\n  constructor(private authService: AuthService,\r\n              private tokenStorage: TokenStorageService,\r\n              private fb: FormBuilder,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.rights = this.tokenStorage.getRights();\r\n    }\r\n  }\r\n\r\n  initForm(){\r\n    this.form = this.fb.group({\r\n      login: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.authService.login(this.form).subscribe(\r\n      data => {\r\n        this.tokenStorage.saveToken(data.token);\r\n        this.tokenStorage.saveUser(data.login);\r\n        this.tokenStorage.saveRights(data.rights);\r\n\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.rights = this.tokenStorage.getRights();\r\n        this.reloadPage();\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isLoginFailed = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadPage() {\r\n    this.router.navigate(['']);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n      <h1 class=\"display-4 py-2 text-truncate\">Login form</h1>\r\n      <br>\r\n      <form [formGroup]=\"form\" class=\"justify-content-center\">\r\n        <div class=\"col\">\r\n          <div class=\"form-group\">\r\n            <label for=\"login\">Login:</label>\r\n            <input type=\"text\"\r\n                   formControlName=\"login\"\r\n                   class=\"form-control\" id=\"login\">\r\n            <div *ngFor=\"let error of validationErrors.login\">\r\n                            <span *ngIf=\"form.get('login').hasError(error.type)\r\n                                        && (form.get('login').dirty\r\n                                        || form.get('login').touched)\"\r\n                                  class=\"validation\">{{ error.message }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password:</label>\r\n            <input type=\"password\"\r\n                   formControlName=\"login\"\r\n                   class=\"form-control\" id=\"password\">\r\n            <div *ngFor=\"let error of validationErrors.login\">\r\n                            <span *ngIf=\"form.get('password').hasError(error.type)\r\n                                        && (form.get('password').dirty\r\n                                        || form.get('password').touched)\"\r\n                                  class=\"validation\">{{ error.message }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button class=\"btn btn-primary\"\r\n                (click)=\"onSubmit()\"\r\n\r\n        >Sign in\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainComponent } from './main/main.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: MainComponent,\r\n    children: [\r\n      // {path: '', component: StartPage},\r\n      // {path: 'login', loadChildren: () => import('../login/login.module').then(mod => mod.LoginModule)},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MainRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MainRoutingModule } from './main-routing.module';\nimport { MainComponent } from './main/main.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [MainComponent, NavBarComponent, FooterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MainRoutingModule\r\n  ]\r\n})\r\nexport class MainModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <app-nav-bar></app-nav-bar>\n  <div id=\"content\">\n      <router-outlet></router-outlet>\n  </div>\n  <app-footer></app-footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n\n    <!--        <button *ngIf=\"authService.isAuthenticated()\" class=\"navbar-toggler\" type=\"button\"-->\n    <!--                data-toggle=\"collapse\"-->\n    <!--                data-target=\"#navbarNav\"-->\n    <!--                aria-controls=\"navbarNav\"-->\n    <!--                aria-expanded=\"false\"-->\n    <!--                aria-label=\"Toggle navigation\">-->\n    <!--          <span class=\"navbar-toggler-icon\"></span>-->\n    <!--        </button>-->\n    <!--        <div *ngIf=\"authService.isAuthenticated()\" class=\"collapse navbar-collapse\" id=\"navbarNav\">-->\n    <!--          <ul class=\"navbar-nav\">-->\n    <!--            <li class=\"nav-item active\">-->\n    <!--              <a class=\"nav-link\" [routerLink]=\"'/tasks'\">Списки задач </a>-->\n    <!--            </li>-->\n    <!--            <li class=\"nav-item\">-->\n    <!--              <a class=\"nav-link\" [routerLink]=\"'/exams'\">Списки экзаменов</a>-->\n    <!--            </li>-->\n    <!--            <li class=\"nav-item\">-->\n    <!--              <a class=\"nav-link\" href=\"#\">Списки </a>-->\n    <!--            </li>-->\n    <!--          </ul>-->\n    <!--        </div>-->\n\n    <button class=\"btn btn-dark d-inline-block d-lg-none ml-auto\"\n            type=\"button\" data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <i class=\"fas fa-align-justify\"></i>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"nav navbar-nav ml-auto\">\n        <!--            <li>-->\n        <!--              <a class=\"nav-item nav-link float-right\" >{{ user?.name || \"Гость\" }}</a>-->\n        <!--            </li>-->\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" [routerLink]=\"'/login'\">Login</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">Page2</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\nconst AUTH_API = 'http://localhost:8080/login/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  login(credentials): Observable<any> {\r\n    let param = new HttpParams();\r\n    param = param.append('login', credentials.login);\r\n    param = param.append('password', credentials.password);\r\n    return this.http.post(AUTH_API, param, httpOptions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\nconst RIGHTS_KEY = 'auth-rights';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(login: string) {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, login);\r\n  }\r\n\r\n  public getUser() {\r\n    return sessionStorage.getItem(USER_KEY);\r\n  }\r\n\r\n  public saveRights(rights: string) {\r\n    window.sessionStorage.removeItem(RIGHTS_KEY);\r\n    window.sessionStorage.setItem(RIGHTS_KEY, rights);\r\n  }\r\n\r\n  public getRights() {\r\n    return sessionStorage.getItem(RIGHTS_KEY);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}